

// Mixins
// -----------
// Truncate text
@mixin truncate($width: 100%) {
  // display: inline-block;
  // vertical-align: middle;
  width: $width;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

//  http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/
//
//  Set a rem font size with pixel fallback
//
//  --- USAGE:
//
//  p {
//    @include font-size(14px)
//  }
@mixin font-size($size) {
  $units: "px" !default;
  $units: unit($size);
  @if ($units== "%") {
    font-size: $size;
  } @else {
    @if unitless($size) {
      @warn "Assuming #{$size} to be in pixels";
      $size: 1px * $size;
    }
    font-size: $size;
    font-size: calculateRem($size);
  }
}

@mixin line-height($size) {
  $units: "px" !default;
  $units: unit($size);
  @if ($units== "%") {
    line-height: $size;
  } @else {
    @if unitless($size) {
      @warn "Assuming #{$size} to be in pixels";
      $size: 1px * $size;
    }
    line-height: $size;
    line-height: calculateRem($size);
  }
}

//  Retina Images
//
//  --- USAGE:
//
//  div.logo {
//    background: url("logo.png") no-repeat;
//    @include image-2x("logo2x.png", 100px, 25px);
//  }
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}



// placeholder
@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

// Adds animation
@mixin animation(
  $name,
  $timing-function,
  $duration,
  $delay: 0ms,
  $iteration-count: 1,
  $direction: normal,
  $fill-mode: forwards
) {
  animation: $name $timing-function $duration $delay $iteration-count $direction
    $fill-mode;
}

// Adds transition
@mixin transition($property, $time: 0.3s, $cb: $cb-fast) {
  transition: $property $time $cb;
}

// Adds styles to any text
@mixin style($fSize, $color: palette(black), $font: $ff) {
  // $units: "px" !default;
  $units: unit($fSize); // @debug $units;
  @if $units== "rem" {
    font-size: $fSize;
  } @else {
    @if unitless($fSize) {
      @warn "Assuming #{$size} to be in pixels";
      $fSize: 1px * $fSize;
    }
    font-size: calculateRem($fSize);
  }
  font-family: $font;
  color: $color;
}

